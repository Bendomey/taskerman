# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time

type User {
  id: Int!
  fullname: String!
  email: String!
  user_type: UserTypeEnum!
  createdBy: User!
  createdAt: Time!
  updatedAt: Time!
}

enum UserTypeEnum {
  ADMIN
  USER
  REVIEWER
}

# for creating a normal user
input CreateUserInput {
  name: String!
  email: String!
  password: String!
  type: UserTypeEnum!
}

# for login mutation
type LoginResult {
  user: User!
  token: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input Pagination {
  skip: Int
  limit: Int
}

input GetUsersInput {
  user_type: UserTypeEnum
  order: OrderType
  orderBy: String
  dateField: String
  dateRange: DateRange
  search: String
  searchFields: [String!]
}

enum OrderType {
  ASC
  DESC
}

input DateRange {
  startDate: Time!
  endDate: Time!
}

input GetUserInput {
  userId: Int!
}

input UpdateUserInput {
  userId: Int!
  fullname: String
  email: String
  user_type: UserTypeEnum
}

input UpdateUserSelfInput {
  userId: Int!
  fullname: String
  email: String
}

input DeleteUserInput {
  userId: Int!
}

type Query {
  users(filter: GetUsersInput = {}, pagination: Pagination = {}): [User]!
  usersLength(filter: GetUsersInput = {}): Int!
  user(filter: GetUserInput!): User!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  login(input: LoginUserInput!): LoginResult!
  updateUser(input: UpdateUserInput!): User!
  updateUserSelf(input: UpdateUserSelfInput!): User!
  deleteUser(input: DeleteUserInput!): Boolean!
}
